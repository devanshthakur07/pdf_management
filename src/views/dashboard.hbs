<!DOCTYPE html>
<html lang="en">
<head>    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
</head>
<body>

<!-- Navigation -->
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Navbar</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/register">Register</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/login">Login</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/dashboard">Dashboard</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/upload">Upload PDF</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/logout">Logout</a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<!-- Dashboard Header -->
<div class="container mt-4">
    <div class="mt-4 p-5 bg-info text-white rounded">
        <h1>DASHBOARD</h1>
    </div>
</div>

<!-- List of Files -->

<!-- Share button and popup -->
<div class="container mt-4">
  <h2>Files uploaded by me</h2>
</div>

{{#each arr}}
  <div class="container mt-4">
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">{{this.name}}</h5>
        <button class="btn btn-primary shareButton" data-filename="{{this.name}}">Share</button>
        <button class="btn btn-primary"><a href="http://localhost:2600/{{this.name}}" style="color: white; text-decoration: none">Open</a></button>
        <button class="btn btn-primary viewCommentsButton" data-filename="{{this.name}}">View Comments</button>
        <button class="btn btn-primary addCommentButton" data-bs-toggle="modal" data-bs-target="#commentModal" data-filename="{{this.name}}">Add Comment</button>
      </div>
      <div class="card-footer sharePopup" style="display: none;">
        <form>
          <div class="mb-3">
            <label for="filename" class="form-label">Filename:</label>
            <input type="text" class="form-control" id="filename" name="filename" value="{{this.name}}" readonly>
          </div>
          <div class="mb-3">
            <label for="email" class="form-label">Email:</label>
            <input type="email" class="form-control" id="email" name="email" required>
          </div>
          <button type="submit" class="btn btn-primary">Send</button>
        </form>
      </div>
    </div>
  </div>
{{/each}}

<!-- Section for Shared Files -->
<div class="container mt-4">
  <h2>Shared Files</h2>
  <ul>
    {{#each sharedFiles}}
        <div class="container mt-4 ml-10">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">{{this.name}}</h5>
                    <button class="btn btn-primary"><a href="/opt/render/project/{{this.path}}"
                            style="color: white; text-decoration: none">Open</a></button>
                    <button class="btn btn-primary viewCommentsButton" data-filename="{{this.name}}">View Comments</button>
                    <button class="btn btn-primary addCommentButton" data-bs-toggle="modal" data-bs-target="#commentModal" data-filename="{{this.name}}">Add Comment</button>
                </div>
            </div>
        </div>
    {{/each}}
  </ul>
</div>

<!-- Comment Modal -->
<div class="modal fade" id="commentModal" tabindex="-1" aria-labelledby="commentModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="commentModalLabel">Add Comment</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="commentForm">
          <input type="hidden" id="commentFilename" value="">
          <div class="mb-3">
            <label for="commentText" class="form-label">Comment:</label>
            <textarea class="form-control" id="commentText" name="commentText" rows="3" required></textarea>
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Add Comment</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
<div class="container mt-4">
  <h2>Comments</h2>
  <ul class="commentsList"></ul>
</div>
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
<script>
  // JavaScript code for sharing files
  const shareButtons = document.querySelectorAll('.shareButton');

  shareButtons.forEach((button) => {
    button.addEventListener('click', (event) => {
      const filename = event.target.dataset.filename;
      const sharePopup = event.target.closest('.card').querySelector('.sharePopup');

      if (sharePopup) {
        sharePopup.style.display = 'block';
        const filenameInput = sharePopup.querySelector('#filename');
        if (filenameInput) {
          filenameInput.value = filename;
        }
      }
    });
  });

  // JavaScript code for handling file sharing form submission
  const sharePopups = document.querySelectorAll('.sharePopup');

  sharePopups.forEach((popup) => {
    const form = popup.querySelector('form');

    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      const filenameInput = popup.querySelector('#filename');
      const emailInput = popup.querySelector('#email');

      if (filenameInput && emailInput) {
        const filename = filenameInput.value;
        const email = emailInput.value;

        try {
          const response = await fetch('/share', {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              filename,
              email,
            }),
          });

          if (response.ok) {
            console.log('File shared successfully.');
          } else {
            console.error('Failed to share file.');
          }
        } catch (error) {
          console.error('An error occurred while sharing the file:', error);
        }
        popup.style.display = 'none';
        filenameInput.value = '';
        emailInput.value = '';
      }
    });
  });

  // JavaScript code for viewing comments
  const viewCommentButtons = document.querySelectorAll('.viewCommentsButton');

  viewCommentButtons.forEach((button) => {
    button.addEventListener('click', async (event) => {
      const filename = event.target.dataset.filename;
      try {
        const response = await fetch(`/comments/${filename}`);
        if (response.ok) {
          const commentsList = document.querySelector('.commentsList');
          commentsList.innerHTML = ''; // Clear existing comments
          const comments = await response.json();
          if (comments.length === 0) {
            commentsList.innerHTML = '<h5>No comments found.</h5>';
          } else {
            comments.forEach((comment) => {
              const li = document.createElement('li');
              li.textContent = comment.text;
              commentsList.appendChild(li);
            });
          }
        } else {
          console.error('Failed to fetch comments.');
        }
      } catch (error) {
        console.error('An error occurred while fetching comments:', error);
      }
    });
  });

  // JavaScript code for adding comments
  const addCommentButtons = document.querySelectorAll('.addCommentButton');
  const commentForm = document.getElementById('commentForm');
  const commentFilenameInput = document.getElementById('commentFilename');
  const commentModal = new bootstrap.Modal(document.getElementById('commentModal'));

  addCommentButtons.forEach((button) => {
    button.addEventListener('click', (event) => {
      const filename = event.target.dataset.filename;
      commentFilenameInput.value = filename;
    });
  });

  commentForm.addEventListener('submit', async (event) => {
    event.preventDefault();

    const commentText = document.getElementById('commentText').value;
    const filename = commentFilenameInput.value;

    try {
      const response = await fetch('/comments', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          filename,
          commentText,
        }),
      });

      if (response.ok) {
        // Success message or further action
        console.log('Comment added successfully.');
        // Hide the comment modal
        commentModal.hide();
        // Reset the form input value
        commentText.value = '';
        // Trigger a refresh of comments
        const viewCommentsButton = document.querySelector(`.viewCommentsButton[data-filename="${filename}"]`);
        viewCommentsButton.click();
      } else {
        // Error message or further action
        console.error('Failed to add comment.');
      }
    } catch (error) {
      console.error('An error occurred while adding the comment:', error);
    }
  });
</script>
</body>
</html>
